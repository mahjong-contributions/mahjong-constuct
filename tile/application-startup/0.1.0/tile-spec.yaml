apiVersion: mahjong.io/v1alpha1
kind: Tile
metadata:
    name: Application-Startup
    category: Application
    version: 0.1.0
    
spec:
  global:
    env:
      - name: GITHUB_USER
        value: $(self.inputs.githubUser)
      - name: GITHUB_ACCESS_TOKEN
        value: $(self.inputs.githubAccessToken)
      - name: APP_REPO
        value: $(self.inputs.appRepo)
      - name: APP_BRANCH
        value: $(self.inputs.appBranch)
      - name: APP_CONF_REPO
        value: $(self.inputs.appConfRepo)
      - name: SECRET_STORE
        value: $(self.inputs.secretStore)
      - name: APPLICATION_NAME
        value: $(self.inputs.applicationName)

  preRun:
    stages:
      - name: PrepareAppContent
        command: |
          cd $TILE_HOME
          rm -rf $APP_REPO;git clone https://github.com/$GITHUB_USER/$APP_REPO.git
          cd $APP_REPO
          git checkout $APP_BRANCH
          git pull
      - name: SyncAppContentToRepository
        command: |
          cd $TILE_HOME/
          rm -rf APP_CONF_REPO;git clone https://$GITHUB_ACCESS_TOKEN:x-oauth-basic@github.com/$GITHUB_USER/$APP_CONF_REPO.git
          cd $APP_CONF_REPO
          cp -r $TILE_HOME/$APP_REPO/manifests/* .
          git add -A
          git commit -m "first commit"
          git push
      - name: CreateSecrets
        command: |
          cd $TILE_HOME/scripts
          ./create-secrets.sh $SECRET_STORE $GITHUB_USER $GITHUB_ACCESS_TOKEN $APP_CONF_REPO
      - name: Register2Codebuild
        command: |
          cd $TILE_HOME/scripts
          ./import-source-credential.sh
          ./create-iam-role.sh $APPLICATION_NAME
          appRepo=https://github.com/$GITHUB_USER/$APP_REPO.git
          sed -e 's/__github_repo__/'$appRepo'/g' \
              -e 's/__application_name__/'$APPLICATION_NAME'/g' ./codebuild.json > ./codebuild-go.json
          ./register-to-codebuild.sh $APPLICATION_NAME codebuild-go.json
      - name: SetupDeploymentWithArgocd
        command: |
          cd $TILE_HOME/manifest/argocd
          ARGOCD_TOKEN=`curl -s -k $(self.inputs.argocdBaseUrl)/api/v1/session -d $'{"username":"$(self.inputs.argocdUser)","password":"$(self.inputs.argocdPassword)"}'|jq -r '.token'`
          configRepo=$(echo https://$GITHUB_ACCESS_TOKEN:x-oauth-basic@github.com/$GITHUB_USER/$APP_CONF_REPO.git | sed -e "s#/#\\\/#g")

          # add application deployment 
          sed -e 's/__application_name__/'$APPLICATION_NAME'/g' \
              -e 's/__github_repo__/'$configRepo'/g' ./stage-all-in-one.json > ./stage-all-in-one-go.json
          curl -s -k $(self.inputs.argocdBaseUrl)/api/v1/applications -H "Authorization: Bearer $ARGOCD_TOKEN" -d "@stage-all-in-one-go.json"
          
  inputs:
    - name: githubUser
      inputType: String
      require: true
    - name: githubAccessToken
      inputType: String
      require: true
    - name: appRepo
      inputType: String
      require: true
    - name: appBranch
      inputType: String
      require: true
    - name: appConfRepo
      inputType: String
      require: true
    - name: argocdBaseUrl
      inputType: String
      require: true
    - name: argocdUser
      inputType: String
      require: true
    - name: argocdPassword
      inputType: String
      require: true
    - name: secretStore
      inputType: String
      require: true
    - name: applicationName
      inputType: String
      require: true


  # Ouptputs represnt output value after launched, for 'ContainerApplication' might need leverage specific command to retrive output.
  outputs:
    # FromCommand
    - name: appConfRepo
      outputType: String
      defaultValueCommand: echo https://github.com/$GITHUB_USER/$APP_CONF_REPO.git
      description: Custom::GitHub        

  notes: []

